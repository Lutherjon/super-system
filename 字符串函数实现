#include <iostream>
int  my_strlen(char* a)
{
	int count = 0;
	while (*a++)
		count++;
	return count;
}
char * my_strcpy(char* dest, const char* src)
{
	char*dest_=dest;
	while (*dest++ = *src++);
	return dest_;
}
char* my_strcat(char* dest, const char* src)
{
	char* dest_ = dest;
	while (*dest++);//移动指针至'\0'后
	dest--;//移至'\0'
	while (*dest++ = *src++);//赋值到'\0'
	return dest_;
}
char* my_strncat(char* dest, char* src,int num)
{
	char* dest_ = dest;
	char ch[101];
	for (int i = 0; i < num; i++)
		ch[i] = *src++;
	while (*dest++);//移动指针至'\0'后
	dest--;//移至'\0'
	for (int i = 0; i < num; i++)
		*dest++ = ch[i];
	*dest = '\0';
	return dest_;
}
int my_strcmp(char* dest,  char* src)
{
	do
	{
		if (*dest < *src)
			return -1;
		else if (*dest > *src)
			return 1;
		else if (*dest == *src && *dest == '\0')
			return 0;
	} while (dest++ &&src++);

}
int my_stricmp(const char * dest, char* src)
{
	do
	{
		if (*dest < *src&&*dest+32<*src)
			return -1;
		else if (*dest > *src&&*dest-32>*src)
			return 1;
		else if (*dest == *src && *dest == '\0')
			return 0;
	} while (dest++ &&src++);
}
char* my_strstr(char* dest,const char* src)
{
	while (*dest)
	{
		int count=0;
		while (*dest == *src)
		{	
			dest++; src++; count++;	
			if (*src == '\0')
				return (dest-count-1);//-1抵消++,count返回
		}
		dest++;
	}
	return NULL;
}
char my_strchr(char* dest, char src)
{
	while (*dest)
		if (*dest++ == src)
			return *--dest;//抵消最后++
	return NULL;
}
char* my_strnset(char* dest, char src, int n)
{
	char* dest_ = dest;
	int i = 0;
	while (*dest && i++ < n)
		*dest++ = src;
	return dest_;
}
char* my_strupr(char* dest)
{
	char* dest_ = dest;
	while (*dest) 
	{
		if (*dest < 'z' && *dest>'a')
		{
			(*dest) -= 32;
		}
		dest++;
	}
	return dest_;
}
char* my_strdor(char* dest)
{
	char* dest_ = dest;
	while (*dest++)
	{
		if (*dest < 'Z' && *dest>'A')
			(*dest) += 32;
}
	return dest_;
}
