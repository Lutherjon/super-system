#include <iostream>
#define ROW 3
#define COL 3
int isfull(char board[ROW][COL], int row, int col)
{
    int i = 0;
    for (i = 0; i < row; i++)
    {
        int j = 0;
        for (j = 0; j < col; j++)
        {
            if (board[i][j] == ' ')
                return 0;
        }
    }
    return 1;
}
void juage(int i)
{
    switch (i)
    {
    case 1: 
        system("cls");
        printf("\t\t\t电脑胜\n");
        break;
    case 2: 
        system("cls");
        printf("\t\t\t玩家胜\n");
        break;
    case 3: 
        system("cls");
        printf("\t\t\t平局\n");
    case 4:
        break;      
    }
}
int iswin(char board[ROW][COL], int row, int col)
{
    for (int i = 0; i < row; i++)
    {
          if (board[i][0] == board[i][1] && board[i][1] == board[i][2]&&board[i][1] ==  '#')
            return 1;  
          else if (board[i][0] == board[i][1] && board[i][1] == board[i][2]&& board[i][1] == '*')
              return 2;
    }
    for (int j = 0; j < col; j++)
    {
        if (board[0][j] == board[1][j] == board[2][j] == '#')
            return 1;
        else  if (board[0][j] == board[1][j] == board[2][j] ==  '*')
            return 2;
    }
    if (board[0][0] == board[1][1] == board[2][2] == '#')
        return 1;
    if (board[0][0] == board[1][1] == board[2][2] == '*')
        return 2;     
        else if (1==isfull(board, ROW, COL))
            return 3;
        else
            return 4;
            
    
     
}
void playmove(char board[ROW][COL], int row, int col)
{
    int x = 0;
    int y = 0;
    printf("玩家走\n"); 
    while (1)
    {
        printf("请输入棋子坐标:>");
        scanf_s("%d %d", &x, &y);
        if (x > 0 && x <= row && y>0 && y <= col && board[x - 1][y - 1] == ' ')
        {
            board[x - 1][y - 1] = '*';
           break;
        }
        else
            printf("输入非法请重输\n");
    }
}
void computer(char board[ROW][COL], int row, int col)
{ 
    printf("电脑走\n");
    while (1)
    {
        int x = rand() % row+1;
        int y = rand() % col+1;
       
        if (x > 0 && x <= row && y > 0 && y <= col && board[x - 1][y - 1] == ' ')
        {

            board[x - 1][y - 1] = '#';
            break;

        }
    }
}
void inboard(char board[ROW][COL], int row, int col)
{
    int i = 0;
    for (i = 0; i < row; i++)
    {
        int j = 0;
        for (j = 0; j < col; j++)
        {
            board[i][j] = ' ';
        }
    }
}
void displayboard(char board[ROW][COL] , int row, int col)
{
    int i = 0;
    int j = 0;
    for (i = 0; i < row; i++)
    { 
       //打印输出行
        for (j = 0; j < col; j++)
        {
            printf(" %c ", board[i][j]);
            if (j < col - 1)
                printf("|");
        }
        printf("\n");
        //打印分割行
        if (i < row - 1)
        {
            for (j = 0; j < col; j++)
            {
                printf("---");
                if (j < col - 1)
                    printf("|");
            }
            printf("\n");
        }
    }
}
void menu()
{
    printf("*******************************\n"); 
    printf("********  1.play 2.exit  ******\n");
    printf("*******************************\n");
}
void game()
{
    char board[ROW][COL] = { 0 };
    //初始化棋盘
    inboard(board, ROW, COL);
    //展示棋盘
    displayboard(board, ROW, COL);
    while (1)
    {
        int i = 0;
        playmove(board, ROW, COL);
        displayboard(board, ROW, COL);
        i= iswin(board, ROW, COL);
        juage(i);
        if (i != 4)
            break;
        computer(board, ROW, COL);
        displayboard(board, ROW, COL);
         i = iswin(board, ROW, COL);
         juage(i);
         if (i != 4)
             break;
    }
}
 void text()
{
    int input = 0;
    do
    {
        menu();
        printf("请选择:>");
        scanf_s("%d", &input);
        switch (input)
        {
        case 1:
            system("cls");
            printf("三子棋\n");
            game();
                break;
        case 2:
            system("cls");
            printf("退出游戏\n");
            break;
        default:
            system("cls");
            printf("输入非法，请重输\n");
            break;
        }

    } while (input);
}  

int main()
{
    srand((unsigned int)time(NULL));
    text();   
}
