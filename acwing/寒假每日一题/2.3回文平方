回文数是指数字从前往后读和从后往前读都相同的数字。

例如数字 12321 就是典型的回文数字。

现在给定你一个整数 B，请你判断 1∼300 之间的所有整数中，有哪些整数的平方转化为 B 进制后，其 B 进制表示是回文数字。

输入格式
一个整数 B。

输出格式
每行包含两个在 B 进制下表示的数字。

第一个表示满足平方值转化为 B 进制后是回文数字那个数，第二个数表示第一个数的平方。

所有满足条件的数字按从小到大顺序依次输出。

数据范围
2≤B≤20,
对于大于 9 的数字，用 A 表示 10，用 B 表示 11，以此类推。

输入样例：
10
输出样例：
1 1
2 4
3 9
11 121
22 484
26 676
101 10201
111 12321
121 14641
202 40804
212 44944
264 69696

#include<iostream>
using namespace std;
string ex(int n,int b)
{
    string a;
    while(n)
    {
        int t=n%b;
        if(t<10)
        a.push_back(t+'0');
        else
        a.push_back((t-10)%10+'A');
        n/=b;
    }
    return a;
}
string re(string a)
{
    string b;
    for(int i=a.size()-1;i>=0;i--)
    b.push_back(a[i]);
    return b;
}
int main()
{
    int n;
    cin>>n;
    for(int i=1;i<=300;i++)
    {
        string a=ex(i*i,n);//倒
        string b=re(a);//正
        if(a==b)
        cout<<re(ex(i,n))<<" "<<a<<endl;
    }
}

作者：带着点诗意走吧
链接：https://www.acwing.com/activity/content/code/content/4733389/
来源：AcWing
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
