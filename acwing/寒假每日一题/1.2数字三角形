给定一个如下图所示的数字三角形，从顶部出发，在每一结点可以选择移动至其左下方的结点或移动至其右下方的结点，一直走到底层，要求找出一条路径，使路径上的数字的和最大。

        7
      3   8
    8   1   0
  2   7   4   4
4   5   2   6   5
输入格式
第一行包含整数 n，表示数字三角形的层数。

接下来 n 行，每行包含若干整数，其中第 i 行表示数字三角形第 i 层包含的整数。

输出格式
输出一个整数，表示最大的路径数字和。

数据范围
1≤n≤500,
−10000≤三角形中的整数≤10000
输入样例：
5
7
3 8
8 1 0 
2 7 4 4
4 5 2 6 5
输出样例：
30
#include<iostream>
using namespace std;
int a[505][505],b[505][505];
int main()
{
    int n,ans=0;
    cin>>n;

    for(int i=1;i<=n;i++)
    for(int j=1;j<=i;j++)
    cin>>a[i][j];

    for(int j=1;j<=n;j++)
    b[n][j]=a[n][j];

    for(int i=n;i>=1;i--)
    for(int j=1;j<=i;j++)
    b[i][j]=max(b[i+1][j],b[i+1][j+1])+a[i][j];

    ans=b[1][1];

    cout<<ans<<endl;
}

作者：带着点诗意走吧
链接：https://www.acwing.com/activity/content/code/content/4728765/
来源：AcWing
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
