有 N 根绳子，第 i 根绳子长度为 Li，现在需要 M 根等长的绳子，你可以对 N 根绳子进行任意裁剪（不能拼接），请你帮忙计算出这 M 根绳子最长的长度是多少。

输入格式
第一行包含 2 个正整数 N、M，表示原始绳子的数量和需求绳子的数量。

第二行包含 N 个整数，其中第 i 个整数 Li 表示第 i 根绳子的长度。

输出格式
输出一个数字，表示裁剪后最长的长度，保留两位小数。

数据范围
1≤N,M≤100000,
0<li<1e9
输入样例：
3 4
3 5 4
输出样例：
2.50
样例解释
第一根和第三根分别裁剪出一根 2.50 长度的绳子，第二根剪成 2 根 2.50 长度的绳子，刚好 4 根。
#include<iostream>
using namespace std;
double a[100005];
int n,m;
bool check(double len)
{
    int ans=0;
    for(int i=0;i<n;i++)
    {
        ans+=a[i]/len;
        if(ans>=m)
    return true;
    }
    return false;
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<n;i++)
    cin>>a[i];
    double l=0,r=1e9;
    while(r-l>1e-3)
    {
        double mid= (r + l) / 2;;
        if(check(mid))
        l=mid;
        else
        r=mid;
    }
    cout.precision(2);
    cout.flags(cout.fixed);
    cout<<l<<endl;
}
